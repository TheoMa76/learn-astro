---
import { Image } from 'astro:assets';
import "../styles/global.css";

interface Link {
    label: string;
    href: string;
}

interface Props {
    links: Link[];
    logo: ImageMetadata;
    logoAlt?: string;
    colorPrimary?: string;
    colorSecondary?: string;
}

const { links = [], logo, logoAlt = "PixelPerfect Logo",colorPrimary,colorSecondary } = Astro.props;
---

<nav class="w-full bg-white shadow-md">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-20 items-center">
      <div class="flex items-center">
        <a href="/" class="flex items-center">
        <Image src={logo || "/placeholder.svg"} alt={logoAlt} width={100} height={100} class="w-24 h-auto" loading={"lazy"} />
        </a>
      </div>

      <div class="hidden md:flex absolute left-1/2 transform -translate-x-1/2">
        <div class="flex items-center space-x-8">
          {links.map(link => (
            <a 
              href={link.href} 
              class="text-[color:var(--color-primary)] hover:text-[color:var(--color-secondary)] font-medium transition-colors duration-200"
            >
              {link.label}
            </a>
          ))}
        </div>
      </div>

      <div class="md:hidden flex items-center">
        <button 
          id="burger-btn" 
          type="button" 
          class="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-gray-500" 
          aria-expanded="false"
          aria-label="Basculer le menu de navigation"
        >
          <svg id="burger-icon" class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
            <path id="burger-path" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <div id="mobile-menu" class="hidden md:hidden bg-white shadow-lg border-t border-gray-200">
    <div class="flex flex-col items-center space-y-4 py-6 px-4">
      {links.map(link => (
        <a 
          href={link.href} 
          class="text-gray-700 hover:text-[color:var(--color-primary)] font-medium transition-colors duration-200 py-2"
        >
          {link.label}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  const btn = document.getElementById('burger-btn');
  const menu = document.getElementById('mobile-menu');
  const path = document.getElementById('burger-path');
  let isOpen = false;

  btn?.addEventListener('click', () => {
    isOpen = !isOpen;
    
    if (menu) {
      menu.classList.toggle('hidden', !isOpen);
    }

    btn.setAttribute('aria-expanded', isOpen ? 'true' : 'false');

    if (path) {
      path.setAttribute('d', isOpen
        ? 'M6 18L18 6M6 6l12 12'
        : 'M4 6h16M4 12h16M4 18h16'
      );
    }
  });

  const mobileLinks = document.querySelectorAll('#mobile-menu a');
  mobileLinks.forEach(link => {
    link.addEventListener('click', () => {
      if (menu && btn && path) {
        isOpen = false;
        menu.classList.add('hidden');
        btn.setAttribute('aria-expanded', 'false');
        path.setAttribute('d', 'M4 6h16M4 12h16M4 18h16');
      }
    });
  });
</script>